---
# ba0fde3d-bee7-4307-b97b-17d0d20aff50
name: Build ISOs
on:
  workflow_dispatch:
    inputs:
      VARIANT:
        description: 'Desktop variant to build'
        required: true
        type: choice
        options:
          - 'gnome'
          - 'kde'
          - 'ALL'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  set-env:
    runs-on: ubuntu-latest
    outputs:
      LATEST_TAG: ${{ steps.set.outputs.LATEST_TAG }}
      REGISTRY: ${{ steps.set.outputs.REGISTRY }}
      REGISTRY_USER: ${{ steps.set.outputs.REGISTRY_USER }}
      PLATFORMS: ${{ steps.set.outputs.PLATFORMS }}
      IMAGE_PATH: ${{ steps.set.outputs.IMAGE_PATH }}
      IMAGE_NAME: ${{ steps.set.outputs.IMAGE_NAME }}
      IMAGE_REF: ${{ steps.set.outputs.IMAGE_REF }}
      VARIANTS: ${{ steps.set.outputs.VARIANTS }}
      MATRIX: ${{ steps.set.outputs.MATRIX }}
      IS_SIGNED: ${{ steps.set.outputs.IS_SIGNED }}
    steps:
      - name: Checkout github actions
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Set environment variables
        uses: ./.github/actions/config
        id: set
        with:
          VARIANT: ${{ inputs.VARIANT }}

  build-iso:
    name: Build ISO
    needs: set-env
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.set-env.outputs.MATRIX)}}
    uses: AlmaLinux/atomic-ci/.github/workflows/build-iso.yml@v7
    with:
      image-name: "${{ needs.set-env.outputs.IMAGE_NAME }}-${{ matrix.variant }}"
      image: "${{ needs.set-env.outputs.IMAGE_REF }}-${{ matrix.variant }}:${{ needs.set-env.outputs.LATEST_TAG }}"
      update_origin_ref: "${{ needs.set-env.outputs.IMAGE_REF }}-${{ matrix.variant }}:${{ needs.set-env.outputs.LATEST_TAG }}"
      update_is_signed: ${{ needs.set-env.outputs.IS_SIGNED == 'true' }}
      config-file: ./iso.toml
      platforms: ${{ needs.set-env.outputs.PLATFORMS }}
      REGISTRY: ${{ needs.set-env.outputs.REGISTRY }}
      REGISTRY_USER: ${{ needs.set-env.outputs.REGISTRY_USER }}
      upload-to-github: false
      upload-to-cloudflare: false
      upload-to-s3: true
      s3-path: "${{ needs.set-env.outputs.IMAGE_NAME }}/${{ needs.set-env.outputs.LATEST_TAG }}"
      bucket: "almalinux-atomic"
      aws-default-region: "us-east-1"
    secrets:
      REGISTRY_TOKEN: ${{ secrets.QUAY_PASSWORD }}
      AWS_ROLE_ARN: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/SIG_Atomic_GHA
    permissions:
      id-token: write
      contents: read
      packages: write
